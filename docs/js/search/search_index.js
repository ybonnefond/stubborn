var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/Emitter.html",[0,0.755,1,1.029]],["body/interfaces/Emitter.html",[0,0.741,1,1.358,2,1.914,3,1.914,4,1.914,5,1.369,6,1.369,7,1.369,8,2.577,9,2.577,10,2.577,11,3.527,12,3.527,13,3.35,14,0.116,15,3.35,16,2.083,17,1.914,18,2.083,19,2.913,20,1.536,21,2.913,22,2.083,23,2.083,24,2.577,25,1.914,26,2.577,27,1.914,28,1.914,29,0.061,30,0.082,31,0.061]],["title/changelog.html",[32,0.873,33,0.873,34,1.656]],["body/changelog.html",[14,0.092,29,0.073,30,0.092,31,0.073,35,2.284,36,3.337,37,3.337,38,3.337,39,2.284,40,2.284,41,2.284,42,2.284,43,1.633,44,2.284,45,2.284,46,3.174,47,1.759,48,3.174,49,3.174,50,2.284,51,2.284,52,1.633,53,2.284,54,1.633,55,2.284,56,1.633,57,2.284,58,2.284,59,2.284,60,2.284,61,2.284]],["title/coverage.html",[62,1.866]],["body/coverage.html",[0,1.034,1,1.408,5,1.91,6,1.91,14,0.109,20,1.408,29,0.085,30,0.102,31,0.085,62,1.91,63,1.408,64,2.672,65,2.672,66,1.91,67,2.672,68,1.91,69,2.672,70,2.672]],["title/dependencies.html",[47,1.229,71,1.656]],["body/dependencies.html",[14,0.117,20,1.385,29,0.084,30,0.101,31,0.084,47,1.385,52,1.878,54,1.878,56,1.878,72,2.628,73,1.878,74,2.628,75,2.628,76,2.628,77,2.628,78,2.628,79,2.628]],["title/index.html",[7,1.184,32,0.873,33,0.873]],["body/index.html",[14,0.12,16,0.806,18,0.806,23,1.254,29,0.021,30,0.047,31,0.021,63,0.347,66,0.471,68,0.471,73,1.736,80,3.264,81,1.128,82,1.128,83,0.658,84,0.658,85,2.536,86,0.658,87,0.658,88,1.128,89,0.658,90,1.128,91,1.48,92,2.784,93,1.128,94,1.128,95,2.536,96,0.658,97,1.128,98,0.658,99,1.128,100,0.658,101,0.658,102,0.658,103,0.658,104,0.658,105,0.658,106,0.658,107,0.658,108,0.658,109,0.658,110,0.658,111,0.658,112,0.658,113,0.658,114,0.658,115,1.48,116,0.658,117,1.128,118,1.128,119,0.658,120,2.152,121,1.48,122,1.973,123,2.152,124,2.536,125,1.128,126,1.128,127,3.005,128,0.658,129,0.658,130,2.63,131,1.754,132,1.128,133,1.128,134,2.152,135,2.784,136,0.658,137,0.658,138,0.658,139,0.658,140,0.658,141,0.658,142,1.128,143,0.658,144,0.658,145,0.658,146,1.973,147,0.658,148,0.658,149,1.48,150,1.48,151,0.658,152,1.973,153,0.658,154,1.128,155,0.658,156,0.658,157,0.658,158,0.471,159,0.658,160,0.658,161,1.48,162,1.128,163,1.754,164,1.48,165,0.658,166,2.906,167,1.128,168,0.658,169,2.784,170,0.658,171,0.658,172,0.658,173,0.658,174,0.658,175,0.658,176,0.658,177,2.302,178,2.428,179,0.658,180,2.63,181,1.128,182,0.658,183,0.658,184,1.128,185,2.428,186,0.658,187,0.658,188,1.128,189,0.658,190,0.658,191,1.128,192,2.428,193,1.754,194,1.973,195,1.973,196,1.058,197,1.48,198,1.48,199,0.658,200,1.754,201,1.058,202,0.658,203,0.658,204,1.48,205,1.973,206,0.658,207,0.658,208,0.658,209,0.658,210,0.658,211,1.128,212,0.658,213,0.658,214,0.658,215,0.658,216,0.658,217,0.658,218,0.658,219,0.658,220,0.658,221,0.658,222,0.658,223,0.658,224,0.658,225,0.658,226,0.658,227,0.658,228,0.658,229,0.658,230,0.658,231,0.658,232,0.658,233,0.658,234,0.658,235,0.658,236,0.658,237,0.658,238,0.658,239,0.658,240,1.128,241,0.658,242,0.658,243,0.658,244,0.658,245,0.658,246,0.658,247,0.658,248,1.754,249,0.658,250,0.658,251,0.658,252,0.658,253,0.658,254,0.658,255,0.658,256,0.658,257,0.658]],["title/license.html",[32,0.873,33,0.873,258,1.184]],["body/license.html",[14,0.081,22,1.331,29,0.059,30,0.081,31,0.059,43,1.331,63,0.981,158,1.331,201,1.808,258,1.331,259,1.861,260,2.872,261,1.861,262,1.861,263,1.861,264,2.529,265,1.861,266,1.861,267,1.861,268,1.861,269,1.861,270,1.861,271,2.529,272,3.506,273,1.861,274,1.861,275,2.872,276,1.861,277,2.529,278,1.861,279,1.861,280,1.861,281,1.861,282,1.861,283,1.861,284,1.861,285,1.861,286,1.861,287,2.529,288,1.861,289,1.861,290,1.861,291,1.861,292,1.861,293,1.861,294,2.529,295,2.529,296,1.861,297,1.861,298,1.861,299,1.861,300,1.861,301,1.861,302,1.861,303,1.861,304,1.861,305,1.861,306,1.861,307,1.861,308,1.861,309,1.861,310,1.861,311,1.861,312,1.861,313,1.861,314,1.861,315,1.861,316,1.861,317,1.861,318,1.861,319,1.861,320,1.861,321,1.861,322,1.861,323,1.861,324,1.861,325,1.861]],["title/modules.html",[326,1.866]],["body/modules.html",[14,0.107,29,0.093,30,0.107,31,0.093,326,2.075]],["title/overview.html",[327,1.866]],["body/overview.html",[0,1.109,14,0.106,29,0.091,30,0.106,31,0.091,196,2.049,327,2.049]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/Emitter.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":66,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["0/4",{"_index":67,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":37,"title":{},"body":{"changelog.html":{}}}],["0de24fa",{"_index":50,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":196,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.4",{"_index":77,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":75,"title":{},"body":{"dependencies.html":{}}}],["2020",{"_index":36,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":38,"title":{},"body":{"changelog.html":{}}}],["248fdf1",{"_index":61,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":53,"title":{},"body":{"changelog.html":{}}}],["4.1.0",{"_index":54,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.17.15",{"_index":79,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":56,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["5.0.2",{"_index":51,"title":{},"body":{"changelog.html":{}}}],["5.0.3",{"_index":45,"title":{},"body":{"changelog.html":{}}}],["5.0.4",{"_index":35,"title":{},"body":{"changelog.html":{}}}],["5.7.3",{"_index":59,"title":{},"body":{"changelog.html":{}}}],["5.7.4",{"_index":60,"title":{},"body":{"changelog.html":{}}}],["501",{"_index":135,"title":{},"body":{"index.html":{}}}],["56c446c",{"_index":44,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":293,"title":{},"body":{"license.html":{}}}],["according",{"_index":245,"title":{},"body":{"index.html":{}}}],["acorn",{"_index":58,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":318,"title":{},"body":{"license.html":{}}}],["add",{"_index":107,"title":{},"body":{"index.html":{}}}],["added",{"_index":198,"title":{},"body":{"index.html":{}}}],["additional",{"_index":229,"title":{},"body":{"index.html":{}}}],["afterall(async",{"_index":171,"title":{},"body":{"index.html":{}}}],["aftereach",{"_index":175,"title":{},"body":{"index.html":{}}}],["against",{"_index":118,"title":{},"body":{"index.html":{}}}],["agent",{"_index":231,"title":{},"body":{"index.html":{}}}],["always",{"_index":220,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":285,"title":{},"body":{"license.html":{}}}],["api",{"_index":85,"title":{},"body":{"index.html":{}}}],["args",{"_index":13,"title":{},"body":{"interfaces/Emitter.html":{}}}],["arising",{"_index":322,"title":{},"body":{"license.html":{}}}],["associated",{"_index":273,"title":{},"body":{"license.html":{}}}],["async",{"_index":178,"title":{},"body":{"index.html":{}}}],["authors",{"_index":311,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":46,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":169,"title":{},"body":{"index.html":{}}}],["based",{"_index":94,"title":{},"body":{"index.html":{}}}],["basically",{"_index":87,"title":{},"body":{"index.html":{}}}],["beforeall(async",{"_index":168,"title":{},"body":{"index.html":{}}}],["between",{"_index":237,"title":{},"body":{"index.html":{}}}],["body",{"_index":73,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["break",{"_index":145,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":147,"title":{},"body":{"index.html":{}}}],["bug",{"_index":39,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":49,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":261,"title":{},"body":{"license.html":{}}}],["c40f8a5",{"_index":55,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":248,"title":{},"body":{"index.html":{}}}],["called",{"_index":243,"title":{},"body":{"index.html":{}}}],["chalk",{"_index":52,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["change",{"_index":142,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":34,"title":{"changelog.html":{}},"body":{}}],["charge",{"_index":268,"title":{},"body":{"license.html":{}}}],["claim",{"_index":314,"title":{},"body":{"license.html":{}}}],["clean",{"_index":173,"title":{},"body":{"index.html":{}}}],["code",{"_index":143,"title":{},"body":{"index.html":{}}}],["compare",{"_index":224,"title":{},"body":{"index.html":{}}}],["complete",{"_index":155,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":292,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":246,"title":{},"body":{"index.html":{}}}],["connection",{"_index":324,"title":{},"body":{"license.html":{}}}],["connexion",{"_index":232,"title":{},"body":{"index.html":{}}}],["console",{"_index":235,"title":{},"body":{"index.html":{}}}],["const",{"_index":166,"title":{},"body":{"index.html":{}}}],["content",{"_index":76,"title":{},"body":{"dependencies.html":{}}}],["contract",{"_index":319,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":100,"title":{},"body":{"index.html":{}}}],["copies",{"_index":287,"title":{},"body":{"license.html":{}}}],["copy",{"_index":271,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":260,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":62,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["d",{"_index":108,"title":{},"body":{"index.html":{}}}],["damages",{"_index":315,"title":{},"body":{"license.html":{}}}],["deal",{"_index":274,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":325,"title":{},"body":{"license.html":{}}}],["defined",{"_index":16,"title":{},"body":{"interfaces/Emitter.html":{},"index.html":{}}}],["definition",{"_index":95,"title":{},"body":{"index.html":{}}}],["definitions",{"_index":119,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":47,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["describe('test",{"_index":165,"title":{},"body":{"index.html":{}}}],["dev",{"_index":105,"title":{},"body":{"index.html":{}}}],["diff",{"_index":236,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":283,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":63,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dyson",{"_index":90,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":1,"title":{"interfaces/Emitter.html":{}},"body":{"interfaces/Emitter.html":{},"coverage.html":{}}}],["etc",{"_index":133,"title":{},"body":{"index.html":{}}}],["event",{"_index":22,"title":{},"body":{"interfaces/Emitter.html":{},"license.html":{}}}],["ex",{"_index":128,"title":{},"body":{"index.html":{}}}],["exactly",{"_index":125,"title":{},"body":{"index.html":{}}}],["examples",{"_index":159,"title":{},"body":{"index.html":{}}}],["expect(res.body).toequal",{"_index":252,"title":{},"body":{"index.html":{}}}],["expect(res.body).toequal(body",{"_index":182,"title":{},"body":{"index.html":{}}}],["expect(res.calls.length).tobe(1",{"_index":256,"title":{},"body":{"index.html":{}}}],["expect(res.calls[0]).toequal",{"_index":257,"title":{},"body":{"index.html":{}}}],["expect(res.statuscode).tobe(501",{"_index":251,"title":{},"body":{"index.html":{}}}],["expect(res.statuscode).tobe(501);q",{"_index":241,"title":{},"body":{"index.html":{}}}],["expect(res.statuscode).tobe(status_codes.success",{"_index":181,"title":{},"body":{"index.html":{}}}],["expect(res.statuscode).toequal(200",{"_index":214,"title":{},"body":{"index.html":{}}}],["expect(res.statuscode).toequal(status_codes.not_implemented",{"_index":197,"title":{},"body":{"index.html":{}}}],["expect(res.statuscode).toequal(status_codes.success",{"_index":207,"title":{},"body":{"index.html":{}}}],["expected",{"_index":141,"title":{},"body":{"index.html":{}}}],["export",{"_index":28,"title":{},"body":{"interfaces/Emitter.html":{}}}],["express",{"_index":302,"title":{},"body":{"license.html":{}}}],["external",{"_index":84,"title":{},"body":{"index.html":{}}}],["extra",{"_index":129,"title":{},"body":{"index.html":{}}}],["fact",{"_index":137,"title":{},"body":{"index.html":{}}}],["false",{"_index":190,"title":{},"body":{"index.html":{}}}],["faq",{"_index":99,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Emitter.html":{},"coverage.html":{}}}],["files",{"_index":43,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["find",{"_index":154,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":307,"title":{},"body":{"license.html":{}}}],["fix",{"_index":41,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":40,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":158,"title":{},"body":{"index.html":{},"license.html":{}}}],["free",{"_index":267,"title":{},"body":{"license.html":{}}}],["fullname",{"_index":263,"title":{},"body":{"license.html":{}}}],["function",{"_index":23,"title":{},"body":{"interfaces/Emitter.html":{},"index.html":{}}}],["furnished",{"_index":290,"title":{},"body":{"license.html":{}}}],["getting",{"_index":32,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["got(`${sb.getorigin()}${path",{"_index":186,"title":{},"body":{"index.html":{}}}],["granted",{"_index":266,"title":{},"body":{"license.html":{}}}],["hapi/accept",{"_index":72,"title":{},"body":{"dependencies.html":{}}}],["hardcoded",{"_index":151,"title":{},"body":{"index.html":{}}}],["header",{"_index":192,"title":{},"body":{"index.html":{}}}],["headers",{"_index":123,"title":{},"body":{"index.html":{}}}],["help",{"_index":223,"title":{},"body":{"index.html":{}}}],["here",{"_index":160,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":265,"title":{},"body":{"license.html":{}}}],["holders",{"_index":312,"title":{},"body":{"license.html":{}}}],["hot",{"_index":112,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":64,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":193,"title":{},"body":{"index.html":{}}}],["implied",{"_index":303,"title":{},"body":{"license.html":{}}}],["import",{"_index":161,"title":{},"body":{"index.html":{}}}],["included",{"_index":296,"title":{},"body":{"license.html":{}}}],["including",{"_index":277,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Emitter.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Emitter.html":{}}}],["install",{"_index":103,"title":{},"body":{"index.html":{}}}],["installation",{"_index":97,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Emitter.html":{}},"body":{"interfaces/Emitter.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Emitter.html":{}}}],["it('should",{"_index":177,"title":{},"body":{"index.html":{}}}],["json",{"_index":188,"title":{},"body":{"index.html":{}}}],["key",{"_index":205,"title":{},"body":{"index.html":{}}}],["kind",{"_index":301,"title":{},"body":{"license.html":{}}}],["know",{"_index":242,"title":{},"body":{"index.html":{}}}],["liability",{"_index":316,"title":{},"body":{"license.html":{}}}],["liable",{"_index":313,"title":{},"body":{"license.html":{}}}],["license",{"_index":258,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":278,"title":{},"body":{"license.html":{}}}],["limited",{"_index":304,"title":{},"body":{"license.html":{}}}],["listener",{"_index":12,"title":{},"body":{"interfaces/Emitter.html":{}}}],["load",{"_index":113,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":78,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":234,"title":{},"body":{"index.html":{}}}],["logdiff",{"_index":227,"title":{},"body":{"index.html":{}}}],["logdiffon501",{"_index":239,"title":{},"body":{"index.html":{}}}],["match",{"_index":92,"title":{},"body":{"index.html":{}}}],["matched",{"_index":117,"title":{},"body":{"index.html":{}}}],["matches",{"_index":191,"title":{},"body":{"index.html":{}}}],["matching",{"_index":30,"title":{},"body":{"interfaces/Emitter.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["meets",{"_index":89,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":306,"title":{},"body":{"license.html":{}}}],["merge",{"_index":281,"title":{},"body":{"license.html":{}}}],["method",{"_index":120,"title":{},"body":{"index.html":{}}}],["methods",{"_index":8,"title":{},"body":{"interfaces/Emitter.html":{}}}],["miss",{"_index":228,"title":{},"body":{"index.html":{}}}],["missing",{"_index":131,"title":{},"body":{"index.html":{}}}],["mit",{"_index":259,"title":{},"body":{"license.html":{}}}],["mock",{"_index":83,"title":{},"body":{"index.html":{}}}],["modify",{"_index":280,"title":{},"body":{"license.html":{}}}],["modules",{"_index":326,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":19,"title":{},"body":{"interfaces/Emitter.html":{}}}],["needed",{"_index":174,"title":{},"body":{"index.html":{}}}],["new",{"_index":68,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["nock",{"_index":88,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":310,"title":{},"body":{"license.html":{}}}],["notice",{"_index":294,"title":{},"body":{"license.html":{}}}],["npm",{"_index":102,"title":{},"body":{"index.html":{}}}],["null",{"_index":202,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":270,"title":{},"body":{"license.html":{}}}],["off(event",{"_index":10,"title":{},"body":{"interfaces/Emitter.html":{}}}],["on(event",{"_index":24,"title":{},"body":{"interfaces/Emitter.html":{}}}],["once",{"_index":9,"title":{},"body":{"interfaces/Emitter.html":{}}}],["once(event",{"_index":26,"title":{},"body":{"interfaces/Emitter.html":{}}}],["one",{"_index":126,"title":{},"body":{"index.html":{}}}],["optional",{"_index":21,"title":{},"body":{"interfaces/Emitter.html":{}}}],["options",{"_index":184,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":321,"title":{},"body":{"license.html":{}}}],["out",{"_index":323,"title":{},"body":{"license.html":{}}}],["overview",{"_index":327,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":71,"title":{"dependencies.html":{}},"body":{}}],["packaged",{"_index":42,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":195,"title":{},"body":{"index.html":{}}}],["parameter",{"_index":130,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"interfaces/Emitter.html":{},"index.html":{}}}],["parseint(value",{"_index":215,"title":{},"body":{"index.html":{}}}],["parser",{"_index":74,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":308,"title":{},"body":{"license.html":{}}}],["path",{"_index":121,"title":{},"body":{"index.html":{}}}],["permission",{"_index":264,"title":{},"body":{"license.html":{}}}],["permit",{"_index":288,"title":{},"body":{"license.html":{}}}],["person",{"_index":269,"title":{},"body":{"license.html":{}}}],["persons",{"_index":289,"title":{},"body":{"license.html":{}}}],["picked",{"_index":148,"title":{},"body":{"index.html":{}}}],["portions",{"_index":298,"title":{},"body":{"license.html":{}}}],["post",{"_index":213,"title":{},"body":{"index.html":{}}}],["property",{"_index":249,"title":{},"body":{"index.html":{}}}],["provided",{"_index":299,"title":{},"body":{"license.html":{}}}],["public",{"_index":217,"title":{},"body":{"index.html":{}}}],["publish",{"_index":282,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":309,"title":{},"body":{"license.html":{}}}],["q",{"_index":219,"title":{},"body":{"index.html":{}}}],["query",{"_index":122,"title":{},"body":{"index.html":{}}}],["received",{"_index":244,"title":{},"body":{"index.html":{}}}],["receiving",{"_index":226,"title":{},"body":{"index.html":{}}}],["regex",{"_index":208,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":209,"title":{},"body":{"index.html":{}}}],["release",{"_index":101,"title":{},"body":{"index.html":{}}}],["request",{"_index":124,"title":{},"body":{"index.html":{}}}],["request(`/?page=1&limit=10",{"_index":199,"title":{},"body":{"index.html":{}}}],["request(`/?page=2",{"_index":200,"title":{},"body":{"index.html":{}}}],["request(path",{"_index":183,"title":{},"body":{"index.html":{}}}],["request(sb.getorigin",{"_index":240,"title":{},"body":{"index.html":{}}}],["requests",{"_index":93,"title":{},"body":{"index.html":{}}}],["res",{"_index":180,"title":{},"body":{"index.html":{}}}],["respond",{"_index":134,"title":{},"body":{"index.html":{}}}],["responds",{"_index":138,"title":{},"body":{"index.html":{}}}],["response",{"_index":150,"title":{},"body":{"index.html":{}}}],["responses",{"_index":86,"title":{},"body":{"index.html":{}}}],["responsetype",{"_index":187,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":276,"title":{},"body":{"license.html":{}}}],["result",{"_index":29,"title":{},"body":{"interfaces/Emitter.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":31,"title":{},"body":{"interfaces/Emitter.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":185,"title":{},"body":{"index.html":{}}}],["returned",{"_index":225,"title":{},"body":{"index.html":{}}}],["rights",{"_index":279,"title":{},"body":{"license.html":{}}}],["route",{"_index":127,"title":{},"body":{"index.html":{}}}],["routes",{"_index":115,"title":{},"body":{"index.html":{}}}],["save",{"_index":104,"title":{},"body":{"index.html":{}}}],["sb",{"_index":167,"title":{},"body":{"index.html":{}}}],["sb.clear",{"_index":176,"title":{},"body":{"index.html":{}}}],["sb.get",{"_index":253,"title":{},"body":{"index.html":{}}}],["sb.get('/').setqueryparameters",{"_index":194,"title":{},"body":{"index.html":{}}}],["sb.get('/').setresponsebody",{"_index":179,"title":{},"body":{"index.html":{}}}],["sb.post",{"_index":210,"title":{},"body":{"index.html":{}}}],["sb.start",{"_index":170,"title":{},"body":{"index.html":{}}}],["sb.stop",{"_index":172,"title":{},"body":{"index.html":{}}}],["security",{"_index":57,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":218,"title":{},"body":{"index.html":{}}}],["sell",{"_index":286,"title":{},"body":{"license.html":{}}}],["send",{"_index":144,"title":{},"body":{"index.html":{}}}],["sent",{"_index":140,"title":{},"body":{"index.html":{}}}],["separate",{"_index":96,"title":{},"body":{"index.html":{}}}],["server",{"_index":82,"title":{},"body":{"index.html":{}}}],["set",{"_index":222,"title":{},"body":{"index.html":{}}}],["setheaders",{"_index":233,"title":{},"body":{"index.html":{}}}],["setheaders(null",{"_index":254,"title":{},"body":{"index.html":{}}}],["setheaders(wildcard",{"_index":203,"title":{},"body":{"index.html":{}}}],["setresponsebody('content",{"_index":255,"title":{},"body":{"index.html":{}}}],["setup",{"_index":250,"title":{},"body":{"index.html":{}}}],["shall",{"_index":295,"title":{},"body":{"license.html":{}}}],["slug",{"_index":211,"title":{},"body":{"index.html":{}}}],["software",{"_index":272,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Emitter.html":{}}}],["src/@types/emitter.ts",{"_index":6,"title":{},"body":{"interfaces/Emitter.html":{},"coverage.html":{}}}],["src/@types/emitter.ts:2",{"_index":25,"title":{},"body":{"interfaces/Emitter.html":{}}}],["src/@types/emitter.ts:3",{"_index":27,"title":{},"body":{"interfaces/Emitter.html":{}}}],["src/@types/emitter.ts:4",{"_index":17,"title":{},"body":{"interfaces/Emitter.html":{}}}],["started",{"_index":33,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":65,"title":{},"body":{"coverage.html":{}}}],["status_codes",{"_index":162,"title":{},"body":{"index.html":{}}}],["strictly",{"_index":91,"title":{},"body":{"index.html":{}}}],["string",{"_index":216,"title":{},"body":{"index.html":{}}}],["stubborn",{"_index":80,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":206,"title":{},"body":{"index.html":{}}}],["subject",{"_index":291,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":284,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":297,"title":{},"body":{"license.html":{}}}],["suite",{"_index":157,"title":{},"body":{"index.html":{}}}],["symbol",{"_index":11,"title":{},"body":{"interfaces/Emitter.html":{}}}],["table",{"_index":70,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":69,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":153,"title":{},"body":{"index.html":{}}}],["test",{"_index":146,"title":{},"body":{"index.html":{}}}],["testing",{"_index":110,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":221,"title":{},"body":{"index.html":{}}}],["throwhttperrors",{"_index":189,"title":{},"body":{"index.html":{}}}],["throwing",{"_index":238,"title":{},"body":{"index.html":{}}}],["tool",{"_index":111,"title":{},"body":{"index.html":{}}}],["tort",{"_index":320,"title":{},"body":{"license.html":{}}}],["type",{"_index":20,"title":{},"body":{"interfaces/Emitter.html":{},"coverage.html":{},"dependencies.html":{}}}],["unload",{"_index":114,"title":{},"body":{"index.html":{}}}],["up",{"_index":149,"title":{},"body":{"index.html":{}}}],["update",{"_index":247,"title":{},"body":{"index.html":{}}}],["upgrade",{"_index":48,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":98,"title":{},"body":{"index.html":{}}}],["use",{"_index":201,"title":{},"body":{"index.html":{},"license.html":{}}}],["user",{"_index":230,"title":{},"body":{"index.html":{}}}],["using",{"_index":152,"title":{},"body":{"index.html":{}}}],["validates",{"_index":139,"title":{},"body":{"index.html":{}}}],["value",{"_index":132,"title":{},"body":{"index.html":{}}}],["very",{"_index":136,"title":{},"body":{"index.html":{}}}],["void",{"_index":15,"title":{},"body":{"interfaces/Emitter.html":{}}}],["warranties",{"_index":305,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":300,"title":{},"body":{"license.html":{}}}],["web",{"_index":81,"title":{},"body":{"index.html":{}}}],["webserver",{"_index":116,"title":{},"body":{"index.html":{}}}],["whether",{"_index":317,"title":{},"body":{"license.html":{}}}],["wildcard",{"_index":163,"title":{},"body":{"index.html":{}}}],["without",{"_index":275,"title":{},"body":{"license.html":{}}}],["working",{"_index":156,"title":{},"body":{"index.html":{}}}],["ws",{"_index":164,"title":{},"body":{"index.html":{}}}],["wsusage",{"_index":109,"title":{},"body":{"index.html":{}}}],["wsyarn",{"_index":106,"title":{},"body":{"index.html":{}}}],["x",{"_index":204,"title":{},"body":{"index.html":{}}}],["year",{"_index":262,"title":{},"body":{"license.html":{}}}],["z",{"_index":212,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Emitter.html":{"url":"interfaces/Emitter.html","title":"interface - Emitter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Emitter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@types/Emitter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    off\n                                \n                                \n                                    on\n                                \n                                \n                                    once\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            off\n                        \n                        \n                    \n                \n            \n            \n                \noff(event: symbol, listener: (args: any[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/@types/Emitter.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            symbol\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(event: symbol, listener: (args: any[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/@types/Emitter.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            symbol\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            once\n                        \n                        \n                    \n                \n            \n            \n                \nonce(event: symbol, listener: (args: any[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/@types/Emitter.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            symbol\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listener\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Emitter {\n  on(event: symbol, listener: (...args: any[]) => void): this;\n  once(event: symbol, listener: (...args: any[]) => void): this;\n  off(event: symbol, listener: (...args: any[]) => void): this;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n5.0.4 (2020-06-23)\nBug Fixes\n\nfix packaged files (56c446c)\n\n5.0.3 (2020-06-23)\nAutomatic Dependencies Upgrade\n\nbump dependencies (0de24fa)\n\n5.0.2 (2020-06-23)\nAutomatic Dependencies Upgrade\n\nbump chalk from 3.0.0 to 4.1.0 (c40f8a5)\n\n5.0.1 (2020-06-23)\nAutomatic Dependencies Upgrade\n\n[security] bump acorn from 5.7.3 to 5.7.4 (248fdf1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@types/Emitter.ts\n            \n            interface\n            Emitter\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/accept : ^5.0.1\n        \n            body-parser : ^1.19.0\n        \n            chalk : ^4.1.0\n        \n            content-type : ^1.0.4\n        \n            lodash : ^4.17.15\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nStubborn\n \n\n\nStubborn web server to mock external api responses. It is basically nock meets Dyson. Stubborn will strictly match the requests based on the definition like nock but in a separate web server like Dyson.\n\n\n\nInstallation\nUsage\nAPI\nFAQ\nContributing\nRelease\n\n\n\n\n\nInstallation\nnpm install --save-dev stubborn-wsyarn add -D stubborn-wsUsage\nStubborn is a testing tool that let you hot load and unload routes into a webserver.\nRequests are strictly matched against routes definitions based on Method, Path, Query parameters, Headers and Body.\nIf the request does not exactly match one route definition (ex: extra parameter, missing parameter, value does not match, etc), Stubborn will respond with a 501.\nThe very fact that Stubborn responds to the request validates that the parameters sent are the expected one, any change in the code that send the request will break the test. Any breaking change will be picked up by your test.\nStubborn response headers and body can be hardcoded or defined using a template.\nYou can find a complete working test suite of the following examples here.\nimport got from 'got';\nimport { Stubborn, STATUS_CODES, WILDCARD } from 'stubborn-ws';\n\ndescribe('Test', () => {\n  const sb = new Stubborn();\n\n  beforeAll(async () => await sb.start());\n  afterAll(async () => await sb.stop());\n\n  // Clean up all routes after a test if needed\n  afterEach(() => sb.clear());\n\n  it('should respond to query', async () => {\n    const body = { some: 'body' };\n    sb.get('/').setResponseBody({ some: 'body' });\n\n    const res = await request(`/`);\n\n    expect(res.statusCode).toBe(STATUS_CODES.SUCCESS);\n    expect(res.body).toEqual(body);\n  });\n\n  function request(path = '/', options = {}) {\n    return got(`${sb.getOrigin()}${path}`, {\n      method: 'GET',\n      responseType: 'json',\n      throwHttpErrors: false,\n      ...options,\n    });\n  }\n});Stubborn strictly matches the request against the route definition.\nIf a query parameter or a header is missing, stubborn will return a 501 (not implemented)\nit('should respond 501 if a parameter is missing', async () => {\n  sb.get('/').setQueryParameters({ page: '1' });\n\n  const res = await request(`/`);\n\n  expect(res.statusCode).toEqual(STATUS_CODES.NOT_IMPLEMENTED);\n});If a query parameter or a header is added, stubborn will return a 501 (not implemented)\nit('should respond 501 if a parameter is added', async () => {\n  sb.get('/').setQueryParameters({ page: '1' });\n\n  const res = await request(`/?page=1&limit=10`);\n\n  expect(res.statusCode).toEqual(STATUS_CODES.NOT_IMPLEMENTED);\n});If a query parameter or a header does not match the route definition, stubborn will return a 501 (not implemented)\nit('should respond 501 if a parameter does not match the definition', async () => {\n  sb.get('/').setQueryParameters({ page: '1' });\n\n  const res = await request(`/?page=2`);\n\n  expect(res.statusCode).toEqual(STATUS_CODES.NOT_IMPLEMENTED);\n});You can use null as wildcard\nit('should match using wildcard', async () => {\n  sb.get('/').setQueryParameters({ page: WILDCARD }).setHeaders(WILDCARD);\n\n  const res = await request(`/?page=2`, {\n    headers: { 'x-api-key': 'api key', 'any-other-header': 'stuff' },\n  });\n\n  expect(res.statusCode).toEqual(STATUS_CODES.SUCCESS);\n});You can use regex to match a parameter, header or body\nit('should match using a regexp', async () => {\n  sb.post('/', {\n    slug: /^[a-z\\-]*$/,\n  });\n\n  const res = await request(`/?page=2`, {\n    method: 'POST',\n    json: { slug: 'stubborn-ws' },\n  });\n\n  expect(res.statusCode).toEqual(200);\n});You can use a function to match a parameter, header or body\nimport { STATUS_CODES } from 'stubborn-ws';\nit('should match using a function', async () => {\n  sb.get('/').setQueryParameters({\n    page: value => parseInt(value as string) > 0,\n  });\n\n  const res = await request(`/?page=2`);\n\n  expect(res.statusCode).toBe(STATUS_CODES.SUCCESS);\n});Public API\nSee the API documentation\nFAQ\nQ: Stubborn is not matching my route definition and always return a 501\nStubborn is STUBBORN, therefore it will return a 501 if it does not exactly match the route definition you have set up.\nTo help you find what missing in the route definition, you can compare it to the response body returned when receiving a 501 using the logDiff() method of a route:\nconst route = sb\n  .get('/')\n  // This header definition will miss additional header added by got, like user-agent, connexion, etc...\n  .setHeaders({ 'X-Api-Key': 'test' })\n  // Will log in console the diff between the route and any request throwing a 501\n  .logDiffOn501();\n\nconst res = await request(sb.getOrigin(), {\n  headers: { 'x-api-key': 'api key' },\n});\n\nexpect(res.statusCode).toBe(501);Q: How do I know if stubborn has been called and matched the route defined?\nStubborn will return a 501 (Not Implemented) if it received a request but cannot match any route.\nIf the request matches the route it will respond according to the route response configuration and update the call property of the route\n  async function call() {\n    return request(sb.getOrigin());\n  }\n\n  // No route setup in Stubborn\n  const res = await call();\n\n  expect(res.statusCode).toBe(501);\n  expect(res.body).toEqual({\n    method: 'GET'\n    path: '/',\n    headers: {\n      // ...\n    }\n    // ...\n  });\n\n\n  const route = sb.get('/')\n    .setHeaders(null)\n    .setResponseBody('content');\n\n\n  const res = await call();\n  expect(res.calls.length).toBe(1);\n  expect(res.calls[0]).toEqual({\n    method: 'GET'\n    path: '/',\n    headers: {\n      // ...\n    }\n      // ...\n    });\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) [year] [fullname]\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
